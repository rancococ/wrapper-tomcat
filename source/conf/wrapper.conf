#encoding=UTF-8
# Configuration files must begin with a line specifying the encoding
#  of the the file.

#********************************************************************
# Wrapper License Properties (Ignored by Community Edition)
#********************************************************************
# Professional and Standard Editions of the Wrapper require a valid
#  License Key to start.  Licenses can be purchased or a trial license
#  requested on the following pages:
# http://wrapper.tanukisoftware.com/purchase
# http://wrapper.tanukisoftware.com/trial

# Include file problems can be debugged by leaving only one '#'
#  at the beginning of the following line:
##include.debug

# The Wrapper will look for either of the following optional files for a
#  valid License Key.  License Key properties can optionally be included
#  directly in this configuration file.
#include ../conf/wrapper-license.conf
#include ../conf/wrapper-license-%WRAPPER_HOST_NAME%.conf
#include ../conf/wrapper-property.conf

# The following property will output information about which License Key(s)
#  are being found, and can aid in resolving any licensing problems.
#wrapper.license.debug=TRUE

#********************************************************************
# Wrapper Localization
#********************************************************************
# Specify the language and locale which the Wrapper should use.
#wrapper.lang=en_US # en_US or ja_JP

# Specify the location of the language resource files (*.mo).
wrapper.lang.folder=../lang

#********************************************************************
# Wrapper App Properties
#********************************************************************
set.MALLOC_ARENA_MAX=1
set.WRAPPER_BASE_DIR=%WRAPPER_BIN_DIR%/..
set.LD_LIBRARY_PATH=.:%WRAPPER_BASE_DIR%/libcore:%WRAPPER_BASE_DIR%/libextend:/usr/lib:/usr/lib64:/usr/local/lib:/usr/local/lib64
set.JAVA_HOME=%WRAPPER_BASE_DIR%/jre
set.CLASSPATH=.:%JAVA_HOME%/lib

#********************************************************************
# Wrapper Java Properties
#********************************************************************
# Java Application
#  Locate the java binary on the system PATH:
#wrapper.java.command=java
#  Specify a specific java binary:
wrapper.java.command=%JAVA_HOME%/bin/java

# Tell the Wrapper to log the full generated Java command line.
wrapper.java.command.loglevel=INFO

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.
#  See the following page for details:
#  http://wrapper.tanukisoftware.com/doc/english/integrate.html
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperStartStopApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=%WRAPPER_BASE_DIR%/bin/wrapper-*.jar
wrapper.java.classpath.2=%WRAPPER_BASE_DIR%/bin/*.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=%WRAPPER_BASE_DIR%/libcore
wrapper.java.library.path.2=%WRAPPER_BASE_DIR%/libextend
wrapper.java.library.path.3=/usr/lib
wrapper.java.library.path.4=/usr/lib64
wrapper.java.library.path.5=/usr/local/lib
wrapper.java.library.path.6=/usr/local/lib64

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
wrapper.java.additional.auto_bits=TRUE

# Java Additional Parameters
wrapper.java.additional.default.stripquotes=TRUE
wrapper.java.additional.1=-Dcatalina.home="%WRAPPER_BASE_DIR%"
wrapper.java.additional.2=-Dcatalina.base="%WRAPPER_BASE_DIR%"
wrapper.java.additional.3=-Djava.io.tmpdir="%WRAPPER_BASE_DIR%/temp"
wrapper.java.additional.4=-Djdk.tls.ephemeralDHKeySize=2048
wrapper.java.additional.5=-Djava.protocol.handler.pkgs=org.apache.catalina.webresources

# wrapper.java.additional_file
wrapper.java.additional_file.stripquotes=TRUE
wrapper.java.additional_file=%WRAPPER_BASE_DIR%/conf/wrapper-additional.conf

# Initial Java Heap Size (in MB)
#wrapper.java.initmemory=3

# Maximum Java Heap Size (in MB)
#wrapper.java.maxmemory=64

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.default.stripquotes=TRUE
wrapper.app.parameter.1=org.apache.catalina.startup.Bootstrap
wrapper.app.parameter.2=1
wrapper.app.parameter.3=start
wrapper.app.parameter.4=org.apache.catalina.startup.Bootstrap
wrapper.app.parameter.5=TRUE
wrapper.app.parameter.6=1
wrapper.app.parameter.7=stop

# wrapper.app.parameter_file
wrapper.app.parameter_file.stripquotes=TRUE

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
# wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
wrapper.console.format=LPTM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=%WRAPPER_BASE_DIR%/logs/console_ROLLNUM.log

wrapper.logfile.purge.pattern=%WRAPPER_BASE_DIR%/logs/console_*.log
wrapper.logfile.purge.sort=TIMES
wrapper.logfile.rollmode=SIZE

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=10m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=50

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper General Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE

# Do not start if the pid file already exists.
wrapper.pidfile.strict=FALSE

# Title to use when running as a console
wrapper.console.title=%APP_NAME%

#********************************************************************
# Wrapper JVM Checks
#********************************************************************
# Detect DeadLocked Threads in the JVM. (Requires Standard Edition)
wrapper.check.deadlock=TRUE
wrapper.check.deadlock.interval=60
wrapper.check.deadlock.action=RESTART
wrapper.check.deadlock.output=FULL

# Out Of Memory detection.
# (Ignore output from dumping the configuration to the console.  This is only needed by the TestWrapper sample application.)
wrapper.filter.trigger.999=wrapper.filter.trigger.*java.lang.OutOfMemoryError
wrapper.filter.allow_wildcards.999=TRUE
wrapper.filter.action.999=NONE
# Ignore -verbose:class output to avoid false positives.
wrapper.filter.trigger.1000=[Loaded java.lang.OutOfMemoryError
wrapper.filter.action.1000=NONE

# Ignore java.lang.OutOfMemoryError without wildcards enabled
wrapper.filter.trigger.1001=Exception in thread "*" java.lang.OutOfMemoryError
wrapper.filter.action.1001=NONE
# Only match Exception in thread "*" java.lang.OutOfMemoryError with wildcards enabled
wrapper.filter.trigger.1002=Exception in thread "*" java.lang.OutOfMemoryError
wrapper.filter.allow_wildcards.1002=TRUE
wrapper.filter.action.1002=DUMP,RESTART
wrapper.filter.message.1002=The JVM has run out of memory.

# Ignore java.lang.StackOverflowError without wildcards enabled
wrapper.filter.trigger.1003=Exception in thread "*" java.lang.StackOverflowError
wrapper.filter.action.1003=NONE
# Only match Exception in thread "*" java.lang.StackOverflowError with wildcards enabled
wrapper.filter.trigger.1004=Exception in thread "*" java.lang.StackOverflowError
wrapper.filter.allow_wildcards.1004=TRUE
wrapper.filter.action.1004=DUMP,RESTART
wrapper.filter.message.1004=The JVM has run stack over flow.

#********************************************************************
# Wrapper Email Notifications. (Requires Professional Edition)
#********************************************************************
# Common Event Email settings.
#wrapper.event.default.email.debug=TRUE
#wrapper.event.default.email.smtp.host=<SMTP_Host>
#wrapper.event.default.email.smtp.port=25
#wrapper.event.default.email.subject=[%WRAPPER_HOSTNAME%:%WRAPPER_NAME%:%WRAPPER_EVENT_NAME%] Event Notification
#wrapper.event.default.email.sender=<Sender email>
#wrapper.event.default.email.recipient=<Recipient email>

# Configure the log attached to event emails.
#wrapper.event.default.email.maillog=ATTACHMENT
#wrapper.event.default.email.maillog.lines=50
#wrapper.event.default.email.maillog.format=LPTM
#wrapper.event.default.email.maillog.loglevel=INFO

# Enable specific event emails.
#wrapper.event.wrapper_start.email=TRUE
#wrapper.event.jvm_prelaunch.email=TRUE
#wrapper.event.jvm_start.email=TRUE
#wrapper.event.jvm_started.email=TRUE
#wrapper.event.jvm_deadlock.email=TRUE
#wrapper.event.jvm_stop.email=TRUE
#wrapper.event.jvm_stopped.email=TRUE
#wrapper.event.jvm_restart.email=TRUE
#wrapper.event.jvm_failed_invocation.email=TRUE
#wrapper.event.jvm_max_failed_invocations.email=TRUE
#wrapper.event.jvm_kill.email=TRUE
#wrapper.event.jvm_killed.email=TRUE
#wrapper.event.jvm_unexpected_exit.email=TRUE
#wrapper.event.wrapper_stop.email=TRUE

# Specify custom mail content
wrapper.event.jvm_restart.email.body=The JVM was restarted.\n\nPlease check on its status.\n

#********************************************************************
# Wrapper Windows Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.name=%APP_NAME%

# Display name of the service
wrapper.displayname=%APP_LONG_NAME%

# Description of the service
wrapper.description=%APP_DESC%

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START, DELAY_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop (Windows NT/2000/XP only).
wrapper.ntservice.interactive=FALSE

# dump environment
wrapper.environment.dump=TRUE

# startup timeout 10m(impl WrapperListener)
wrapper.startup.timeout=600

# ping
wrapper.ping.timeout=60
wrapper.ping.interval=10

# enable or disable this debugging check
wrapper.java.detect_debug_jvm=FALSE

# print java version
wrapper.java.version.output=TRUE
wrapper.java.version.timeout=60

# wrapper's pid and status
wrapper.pidfile=./%APP_NAME%.pid
wrapper.statusfile=./%APP_NAME%.status

# java's pid, id, status
wrapper.java.pidfile=./%APP_NAME%.java.pid
wrapper.java.idfile=./%APP_NAME%.java.id
wrapper.java.statusfile=./%APP_NAME%.java.status
